{% extends 'base.html.twig' %}

{% block title %}List Events!{% endblock %}
{% block meta %}list of events {% endblock %}

{% block body %}

<div class="banner">
    <div>
        <h1 class="banner-title">OUR EVENTS</h1>
        <p class="banner-text">Text text<span class="underscore-static">_</span></p>
    </div>
</div>

<section class="content" id="events-index">
    {% for event in ongoingEvents %}

        <div class="container-event">
            <div id="picture-event">
                <figure>
                    <div></div>
                </figure>
            </div>
            <div id="infos-event">
                <h2 class="text-n1">{{event.name}}<span class="">_</span></h2>
                <p id="resume-event">{{event.description}}</p>
                <div id="details-event">
                    <p><span>Date : </span> {{event.startDate|formatDate}} <span>|</span> {{event.startDate|date('H:i')}} - {{event.endDate|date('H:i')}}</p> 
                    <p><span>Statut : </span>
                    
                        <span class="status {{ event.status == 'OPEN' ? 'open' : 
                        (event.status == 'CLOSED' ? 'closed' : 
                        (event.status == 'PENDING' ? 'pending' : 
                        (event.status == 'ARCHIVED' ? 'archived' : 'status-default'))) }}">
                        {{ event.status }}
                        </span>

                    </p>
                    <p><span>Capacity : </span> {{event.nbReversationMade}}  /  {{event.nbRooms}}</p>

                </div>
                <div id="btn-event">
                    <div class="button btn6">SEE MORE</div>
                </div>
            </div>
        </div>
    {% endfor %}

    

</section>




    {# <div class="ongoing-events">
            {% for event in ongoingEvents %}
            <div>
                <p>
                    <span class="name">{{event.name}}</span> 
                    <span class="status {{ event.status == 'OPEN' ? 'open' : 
                                        (event.status == 'CLOSED' ? 'closed' : 
                                        (event.status == 'PENDING' ? 'pending' : 
                                        (event.status == 'ARCHIVED' ? 'archived' : 'status-default'))) }}">
                        {{ event.status }}
                    </span>
                
                </p>
                <p>{{event.startDate|formatDate}} - {{event.endDate|formatDate}} </p>
                <p>{{event.startDate|date('H:i')}} - {{event.endDate|date('H:i')}}</p>
                <p>{{event.description}}</p>
                <p>Capacity : {{event.nbReversationMade}}  /  {{event.nbRooms}} - Remaining : {{event.nbReversationRemaining}}</p>
    
                <a href="{{ path('show_event', { slug : event.slug  }) }}">See details <i class="fa-solid fa-plus"></i></a>
                <hr>
            </div>
            {% endfor %}
    </div> #}

    

    <div class="past-event-title">
        <h2>See past events </h2> 
        <div class="past-event-btn"><i class="ri-eye-close-fill"></i></div>
    </div>

    <div class="past-events" style="display:none">
        {% for event in pastEvents %}
        <div>
            <p>
                <span class="name">{{event.name}}</span> 
                <span class="status {{ event.status == 'OPEN' ? 'open' : 
                                    (event.status == 'CLOSED' ? 'closed' : 
                                    (event.status == 'PENDING' ? 'pending' : 
                                    (event.status == 'ARCHIVED' ? 'archived' : 'status-default'))) }}">
                    {{ event.status }}
                </span>
            
            </p>

           
            <p>{{event.startDate|formatDate}} - {{event.endDate|formatDate}} </p>
            <p>{{event.startDate|date('H:i')}} - {{event.endDate|date('H:i')}}</p>
    
            <p>{{event.description}}</p>

            <a href="{{ path('show_event', {slug : event.slug  }) }}">See details <i class="fa-solid fa-plus"></i></a>
            <hr>
        </div>
        {% endfor %}
    </div>

    {# <h1>Calendrier des événements</h1>

    <div id="calendar" data-formatted-events='{{ formattedEvents|raw }}'></div> #}
{#     
{{ dump(formattedEvents)}} #}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Function to check if an element is visible in the viewport
        function isElementInViewport(el) {
            // Retrieve the bounding rectangle of the element
            var rect = el.getBoundingClientRect();
            // Check if the element's top, left, bottom, and right coordinates are within the viewport
            return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
        }
    
        // Function to check and show visible events
        function checkAndShowEvents() {
            // Remove the "underscore" class from all spans
        document.querySelectorAll('.container-event span').forEach(function(span) {
            span.classList.remove('underscore');
        });


            // Select all elements with class 'container-event' and loop through them
            document.querySelectorAll('.container-event').forEach(function(container) {
                // Check if the current container is in the viewport
                if (isElementInViewport(container)) {
                    // change the opacity and make the container visible
                    container.style.opacity = '1';

                    // Add the "underscore" class to the span within the current container
                container.querySelector('span').classList.add('underscore');
                }
            });
        }
    
        // Event listener to detect user scrolling
        window.addEventListener('scroll', checkAndShowEvents);
    
        // Check and show visible events when the page initially loads
        // checkAndShowEvents();

        // Delay the initial check and display of events
        setTimeout(checkAndShowEvents, 1200);
    });
</script>

{% endblock %}
